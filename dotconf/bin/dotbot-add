#!/bin/bash
set -eu

# Script which simplifies adding dotfiles to track to dotbot. The script makes
# some assumptions of the structure of the the dotfiles repository and and is
# only useful if:
# 1. The dotfiles repository has a directory (set from env variable
#    DOTBOT_ADD_DIR) which mirrors the locations of the users home directory,
#    i.e., if a file is available in
#    $DOTDOT_ADD_REPO_PATH/$DOTBOT_ADD_DIR/my/path, then it is copied/linked to
#    $HOME/my/path.
# 2. The dotbot configuration file is located in ./install.conf.yaml in the
#    root of the repository. Also, the link link object in the configuration
#    file must be the last defined configuration in the file. The script simple
#    appends entries to the end of the file with four (4) spaces idention.
#    For example the following is a valid dotbot configuration file compatible
#    with this script:
#
#     (...)
#     - defaults:
#     - clean: ['Â¨']
#     - link:                                     # <- Last cofiguration in the file
#         ~/.bashrc: dotconf/.bashrc              # <- Four spaces indention
#         ~/.bash_profile: dotconf/.bash_profile
# 3. The install dotbot script is available at $DOTBOT_ADD_REPO_PATH/install.
# 4. Using git as a VCS.
#
# Configuration:
#   DOTBOT_ADD_REPO_PATH      (default: $HOME/.dotfiles)
#   DOTBOT_ADD_DIR            (default: dotconf)
#   DOTBOT_ADD_LINK_INDENT    (default: 4)

usage="Usage: $(basename "$0") homedir_file_to_track"
[[ "$1" == "-h" || "$1" == "--help" ]] && { echo "$usage" ; exit 0 ; }

dotfiles_repo="${DOTBOT_ADD_REPO_PATH:-$HOME/.dotfiles}"
dotfiles_dir="${DOTBOT_ADD_DIR:-dotconf}"
dotfiles_link_indent=${DOTBOT_ADD_LINK_INDENT:-"4"}
git -C "$dotfiles_repo" diff --quiet || {
  echo "Unstaged change, commit changes before using $(basename "$0")"
  exit 1
}
file="$(realpath "$1")"
target=$(echo "$file" | sed -E "s|$HOME|~|")
src=$(echo "$file" | sed -E "s|$HOME|$dotfiles_dir|")
cp_dest=$(echo "$file" | sed -E "s|$HOME|$dotfiles_repo/$dotfiles_dir|")
mkdir -p "$(dirname "$cp_dest")"
link_indent="$(printf "%${dotfiles_link_indent}s")"
echo "$link_indent$target: $src" >> "$dotfiles_repo/install.conf.yaml"
cp "$file" "$cp_dest"
cd "$dotfiles_repo"
git add "$cp_dest"
mkdir -p "$HOME/.dotfiles_backup"
mv "$file" "$HOME/.dotfiles_backup/$(basename "$file")"
"$dotfiles_repo/install"
git -C "$dotfiles_repo"  commit -am "add $target"
